################################
##
## Documentation using pandoc
##
################################

# Documentation folder, top level in this case.
DOC_SRC=documentation

# Assets folder used by pandoc
ASSETS=assets

# Optional arguments used by pandoc
OPTS=exec -- haddock --html

# User Documentation
README=README

################################
##
## Research
##
################################

RESEARCH=research
RESEARCH_PAPER=typecheckingMonad

################################
##
## Code
##
################################

# Name of the project folder
CODE_SRC=typechecker-oopl

# Path to code
CODE_PATH=code/$(CODE_SRC)

# Folder where Haddock places autogenerate HTML
HADDOCK=docs

# STACK command
STACK=stack clean --full

################################
##
## Packing everything up
##
################################

# Folder with all the artefacts
ARTEFACT_FOLDER=artefact-submission

ZIP_FILE=updated-artefact.zip

################################
##
## Connection of components
##
################################

all: doc gen

doc:
	make -C $(DOC_SRC) $@
	make -C $(CODE_PATH) $@
	make -C $(RESEARCH) $(RESEARCH)

gen:
	# Creation of folder with artefact, empty at the moment
	mkdir -p $(ARTEFACT_FOLDER)

	# Moving user documentation to artefact folder
	cp $(DOC_SRC)/$(README).pdf $(ARTEFACT_FOLDER)
	cp $(DOC_SRC)/$(README).html $(ARTEFACT_FOLDER)
	cp -r $(DOC_SRC)/$(ASSETS) $(ARTEFACT_FOLDER)

	# Moving research article to artefact folder
	cp $(RESEARCH)/$(RESEARCH_PAPER).pdf $(ARTEFACT_FOLDER)/$(ASSETS)/submitted-version.pdf

	# Moving code and autogenerated doc to artefact folder
	cp -r $(CODE_PATH) $(ARTEFACT_FOLDER)
	cd $(ARTEFACT_FOLDER)/$(CODE_SRC)
	$(STACK)
	cd ../..
	rm -rf $(ARTEFACT_FOLDER)/$(DOC_SRC)
	mv $(ARTEFACT_FOLDER)/$(CODE_SRC)/$(HADDOCK) $(ARTEFACT_FOLDER)/$(DOC_SRC)

	# zip it!
	zip $(ZIP_FILE) $(ARTEFACT_FOLDER)

update:
	vagrant up
	vagrant provision

clean:
	rm -rf $(ARTEFACT_FOLDER)

.PHONY: all clean doc gen update
